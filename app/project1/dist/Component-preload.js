//@ui5-bundle project1/Component-preload.js
sap.ui.require.preload({
	"project1/Component.js":function(){
sap.ui.define(["sap/ui/core/UIComponent","project1/model/models"],(e,t)=>{"use strict";return e.extend("project1.Component",{metadata:{manifest:"json",interfaces:["sap.ui.core.IAsyncContentCreation"]},init(){e.prototype.init.apply(this,arguments);this.setModel(t.createDeviceModel(),"device");this.getRouter().initialize()}})});
},
	"project1/controller/App.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller"],e=>{"use strict";return e.extend("project1.controller.App",{onInit(){}})});
},
	"project1/controller/homeView.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller","./../model/models","./../model/formatter","sap/m/MessageBox","sap/m/MessageToast"],(e,t,s,o,i)=>{"use strict";return e.extend("project1.controller.homeView",{formatter:s,onInit:async function(){const e=this.getView();const s=new sap.ui.model.odata.v4.ODataModel({serviceUrl:"/ojt/",synchronizationMode:"None"});this.byId("itemTable").bindItems({path:"EntityList>/Employees",parameters:{$expand:"role,department"},template:new sap.m.ColumnListItem({type:"Active",press:this.onPressItem.bind(this),cells:[new sap.m.Text({text:"{EntityList>firstName},{EntityList>lastName}"}),new sap.m.Text({text:"{EntityList>role/name}"}),new sap.m.Text({text:"{EntityList>department/name}"}),new sap.m.Text({text:"{EntityList>email}"}),new sap.m.Button({id:"deleteButton",icon:"sap-icon://delete",type:"Transparent",press:this.onDeleteEmployee.bind(this),tooltip:"{i18n>deleteTooltip}",enabled:{parts:["role>/role"],formatter:this.formatter.isAdmin}})]})});e.setModel(s,"EntityList");await t.getRole(e);t.setInitialModel(e);await t.getListRole(e);await t.getListDepart(e);t.setVisibleControl(e);await t.getEmployees(e)},onPressItem:async function(e){const s=this.getView();const o=e.getSource();const i=o.getBindingContext("EntityList");try{const e=await i.requestObject();const t=new sap.ui.model.json.JSONModel(e);this.getView().setModel(t,"employDetail")}catch(e){}s.getModel("VisibleControl").setProperty("/",{list:false,detail:true,create:false});t._setModel(s,{isEdit:false},"Edit")},onPressBack:function(){const e=this.getView();e.getModel("VisibleControl").setProperty("/",{list:true,detail:false,create:false})},onPressEdit:function(){const e=this.getView();const t=e.getModel("Edit");const s=t.getProperty("/isEdit");t.setProperty("/isEdit",!s)},onPressCreEmp:function(){const e={firstName:"",lastName:"",email:"",hireDate:"",dateOfBirth:"",salary:0,gender:false,role:{ID:""},department:{ID:""}};const t=this.getView();t.setModel(new sap.ui.model.json.JSONModel(e),"createDetail");t.getModel("VisibleControl").setProperty("/",{list:false,detail:false,create:true})},onDeleteEmployee:function(e){const t=e.getSource().getParent();const s=t.getBindingContext("EntityList");if(!s){sap.m.MessageToast.show("No data found");return}sap.m.MessageBox.confirm("Are you sure to delete?",{onClose:async e=>{if(e===sap.m.MessageBox.Action.OK){try{if(typeof s.delete==="function"){await s.delete();sap.m.MessageToast.show("Delete success")}else{sap.m.MessageBox.error("Delete fail")}}catch(e){sap.m.MessageBox.error("Delete fail"+e.message)}}}})}})});
},
	"project1/i18n/i18n.properties":'# This is the resource bundle for project1\n\n#Texts for manifest.json\n\n#XTIT: Application name\nappTitle=App Title\n\n#YDES: Application description\nappDescription=An SAP Fiori application.\n#XTIT: Main view title\ntitle=App Title\n#Company name\ncompanyName =SAP\n#Employee list title\n\nempListTitle=Employee List\nnameFirst=First name\nplaceholderFirstName=First name placeholder\nplaceholderLastName=Last name placeholder\nplaceholderEmail=Email placeholder\nplaceholderHireDate=Hire Date placeholder\nplaceholderRole= Role placeholder\nplaceholderDepartment=Department placeholder\nhireDate = Hire Date\nrole=Role\nsalary=Salary\ndepartment=Department\nnameLast =Last name\nnameText=Name\ngenderText=Gender\ndeparText=Department\nlevelText=Level\nroleText=Role\ncertificate=Certificate\nuploadPlaceholder=Choose a file for Upload...\nDobText=Date of Birth\nworkFromText=Working From\nsalaryText=Salary\nemailText=Email\nemployeeDetail=Employee Detail\ndeleteText= Delete\ndeleteTooltip=Delete record\nemployeeCreate =Create employee',
	"project1/manifest.json":'{"_version":"1.65.0","sap.app":{"id":"project1","type":"application","i18n":"i18n/i18n.properties","applicationVersion":{"version":"0.0.1"},"title":"{{appTitle}}","description":"{{appDescription}}","resources":"resources.json","sourceTemplate":{"id":"@sap/generator-fiori:basic","version":"1.18.0","toolsId":"704e01cc-92a1-4d32-9aae-290cbbcfe9f2"},"dataSources":{"mainService":{"uri":"/ojt/","type":"OData","settings":{"annotations":[],"odataVersion":"4.0"}}}},"sap.ui":{"technology":"UI5","icons":{"icon":"","favIcon":"","phone":"","phone@2":"","tablet":"","tablet@2":""},"deviceTypes":{"desktop":true,"tablet":true,"phone":true}},"sap.ui5":{"flexEnabled":true,"dependencies":{"minUI5Version":"1.136.2","libs":{"sap.m":{},"sap.ui.core":{}}},"contentDensities":{"compact":true,"cozy":true},"models":{"i18n":{"type":"sap.ui.model.resource.ResourceModel","settings":{"bundleName":"project1.i18n.i18n"}},"":{"dataSource":"mainService","preload":true,"settings":{"operationMode":"Server","autoExpandSelect":true,"earlyRequests":true}}},"resources":{"css":[{"uri":"css/style.css"}]},"routing":{"config":{"routerClass":"sap.m.routing.Router","controlAggregation":"pages","controlId":"app","transition":"slide","type":"View","viewType":"XML","path":"project1.view","async":true,"viewPath":"project1.view"},"routes":[{"name":"RoutehomeView","pattern":":?query:","target":["TargethomeView"]}],"targets":{"TargethomeView":{"id":"homeView","name":"homeView"}}},"rootView":{"viewName":"project1.view.App","type":"XML","id":"App","async":true}}}',
	"project1/model/formatter.js":function(){
sap.ui.define([],()=>{"use strict";return{formatDate(n){if(n&&n!=""){let r=new Date(n+"T00:00:00");let e={year:"numeric",month:"long",day:"numeric"};return r.toLocaleString("en-US",e)}return""},formatCurrency:function(n,r){if(n==null||isNaN(n))return"";return new Intl.NumberFormat(undefined,{style:"currency",currency:r||"USD",minimumFractionDigits:0}).format(n)},isAdmin:function(n){return n==="admin"}}});
},
	"project1/model/models.js":function(){
sap.ui.define(["sap/ui/model/json/JSONModel","sap/ui/Device"],function(e,t){"use strict";return{createDeviceModel:function(){var o=new e(t);o.setDefaultBindingMode("OneWay");return o},_setModel:function(t,o,s){t.setModel(new e(o),s)},_getModel:function(e,t){let o=e.getModel(t);return o},setInitialModel:function(e){},setVisibleControl:function(e){const t={list:true,detail:false,create:false};this._setModel(e,t,"VisibleControl")},getListRole:async function(e){try{const t=await fetch("/ojt/Roles",{method:"GET",headers:{"Content-Type":"application/json"}});if(t.status==200){let o=await t.json();let s=o.value;this._setModel(e,s,"roleList");console.log(e.getModel("roleList"));return s}}catch(e){return null}},getRole:async function(e){try{const t=await fetch("/ojt/whoami",{method:"GET",headers:{"Content-Type":"application/json"}});console.log(t.status);if(t.status==200){console.log("abc");let o=await t.json();let s=o.value;this._setModel(e,{role:s},"role");console.log(s);return s}}catch(e){return null}},getListDepart:async function(e){try{const t=await fetch("/ojt/Departments",{method:"GET",headers:{"Content-Type":"application/json"}});if(t.status==200){let o=await t.json();let s=o.value;this._setModel(e,s,"departmentsList");console.log(e.getModel("departmentsList"));return s}}catch(e){return null}},getEmployees:async function(e){try{const t=await fetch("/ojt/Employees?$expand=role,department",{method:"GET",headers:{"Content-Type":"application/json"}});if(t.status==200){let o=await t.json();let s=o.value;this._setModel(e,s,"EmployeeList");return s}}catch(e){return null}},deleteEmployee:async function(e,t,o){try{const s=`/ojt/Employees(${o})`;console.log("🛰️ Gọi API DELETE tới URL:",s);const n=await fetch("/ojt/Employees('${sEmployeeId}')",{method:"DELETE",headers:{"Content-Type":"application/json"}});if(n.status===204){const s=this._getModel(e,t);const n=s.getData();if(Array.isArray(n.items)){const s=n.items.filter(e=>e.ID!==o);this._setModel(e,{items:s},t)}return true}else{console.error(`Delete failed with status ${n.status}`);return false}}catch(e){console.error("Error in deleteEmployee:",e);return false}}}});
},
	"project1/view/App.view.xml":'<mvc:View controllerName="project1.controller.App"\n    displayBlock="true"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns="sap.m"><App id="app"></App></mvc:View>',
	"project1/view/fragment/create.fragment.xml":'<core:FragmentDefinition xmlns:f="sap.f" displayBlock="true"\n    xmlns="sap.m"\n    xmlns:core="sap.ui.core"\n    xmlns:mvc="sap.ui.core.mvc" height="100%"><VBox id="createEmp" class="detailContainer" width="100%" height="100%" alignItems="Center" visible="{VisibleControl>/create}"><HBox id="createHeader" width="100%" justifyContent="SpaceBetween" gap="1.5rem"><Title id="createTitle" text="{i18n>employeeCreate}" class="titleDetail" /></HBox><VBox id="creaetContentID" class="detailContent" width="80%"><VBox id="creFormID" class="form" gap="1.5rem"><HBox id="creNameFirstID" alignItems="Center"><VBox id="creNameFirstLabelID" width="10%"><Label id="creNameFirstLabel" text="{i18n>nameFirst}" /></VBox><VBox id="creNameFirstTextID" width="50%"><Input id="creNameFirstInput" type="Text" placeholder="{i18n>placeholderFirstName}" value="{employeeDetail>/firstName}" enabled="{Edit>/isEdit}" /></VBox></HBox><HBox id="creNameLastID" alignItems="Center"><VBox id="creNameLastLabelID" width="10%"><Label id="creNameLastLabel" text="{i18n>nameLast}" /></VBox><VBox id="creNameLastTextID" width="50%"><Input id="creNameLastInput" type="Text" placeholder="{i18n>placeholderLastName}" value="{employeeDetail>/lastName}" enabled="{Edit>/isEdit}" /></VBox></HBox><HBox id="creEmailID" alignItems="Center"><VBox id="creEmailLabelID" width="10%"><Label id="creEmailLabel" text="{i18n>emailText}" /></VBox><VBox id="creEmailTextID" width="50%"><Input id="creEmailInput" type="Text" placeholder="{i18n>placeholderEmail}" value="{employeeDetail>/email}" enabled="{Edit>/isEdit}" /></VBox></HBox><HBox id="creHideDateID" alignItems="Center"><VBox id="creHireDateLabelID" width="10%"><Label id="creHireDateLabel" text="{i18n>hireDate}" /></VBox><VBox id="creHireDateTextID" width="50%"><Input id="creHireDateInput" type="Text" placeholder="{i18n>placeholderHireDate}" value="{employeeDetail>/hireDate}" enabled="{Edit>/isEdit}" /></VBox></HBox><HBox id="creDob" alignItems="Center"><VBox id="creDobLabelID" width="10%"><Label id="creDobLabel" text="{i18n>DobText}" /></VBox><VBox id="creHDobTextID" width="50%"><Input id="creDobInput" type="Text" placeholder="{i18n>DobText}" value="{employeeDetail>/hireDate}" enabled="{Edit>/isEdit}" /></VBox></HBox><HBox id="creGen" alignItems="Center"><VBox id="creGenLabelID" width="10%"><Label id="creGenLabel" text="{i18n>genderText}" /></VBox><VBox id="creGenTextID" width="50%"><Input id="creGenInput" type="Text" placeholder="{i18n>genderText}" value="{employeeDetail>/hireDate}" enabled="{Edit>/isEdit}" /></VBox></HBox><HBox id="creRoleID" alignItems="Center"><VBox id="creRoleLabelID" width="10%"><Label id="creRoleLabel" text="{i18n>role}" /></VBox><VBox id="creRoleTextID" width="50%"><ComboBox id="creCbbRole" items="{roleList>/}" width="100%" placeholder="{i18n>placeholderRole}" selectedKey="{employeeDetail>/role/name}"><core:Item id="creItemRole" key="{roleList>name}" text="{roleList>name}" /></ComboBox></VBox></HBox><HBox id="creDepartmentID" alignItems="Center"><VBox id="creDepartmentLabelID" width="10%"><Label id="creDepartmentLabel" text="{i18n>department}" /></VBox><VBox id="creDepartmentTextID" width="50%"><ComboBox id="creCbbDepart" items="{departmentsList>/}" width="100%" placeholder="{i18n>placeholderDepartment}" selectedKey="{employeeDetail>/department/name}"><core:Item id="creItemDepart" key="{departmentsList>name}" text="{departmentsList>name}" /></ComboBox></VBox></HBox><Button id="creaetButton" icon="sap-icon://create" type="Transparent" press=".onCreateEmployee" /></VBox></VBox></VBox></core:FragmentDefinition>',
	"project1/view/fragment/detail.fragment.xml":'<core:FragmentDefinition xmlns:f="sap.f" displayBlock="true"\n    xmlns="sap.m"\n    xmlns:core="sap.ui.core"\n    xmlns:mvc="sap.ui.core.mvc" height="100%"><VBox id="detailItem" class="detailContainer" width="100%" height="100%" alignItems="Center"\n    visible="{VisibleControl>/detail}"><HBox id="detailHeader" width="100%" justifyContent="SpaceBetween" gap="1.5rem"><Title id="detailTitle" text="{i18n>employeeDetail}" class="titleDetail" /><Button id="btn_edit" icon="sap-icon://edit" type="Transparent" press="onPressEdit" \n        visible="{ path: \'role>/role\', formatter: \'.formatter.isAdmin\' }"/></HBox><VBox id="detailContentID" class="detailContent" width="80%"><VBox id="formID" class="form" gap="1.5rem" ><HBox id="nameFirstID" alignItems="Center"><VBox id="nameFirstLabelID" width="10%"><Label id="nameFirstLabel" text="{i18n>nameFirst}" /></VBox><VBox id="nameFirstTextID" width="50%"><Input id="nameFirstInput" type="Text"\n                        placeholder="{i18n>placeholderFirstName}"\n                        value="{employDetail>/firstName}"\n                        enabled="{Edit>/isEdit}" /></VBox></HBox><HBox id="nameLastID" alignItems="Center"><VBox id="nameLastLabelID" width="10%"><Label id="nameLastLabel" text="{i18n>nameLast}" /></VBox><VBox id="nameLastTextID" width="50%"><Input id="nameLastInput" type="Text"\n                        placeholder="{i18n>placeholderLastName}"\n                        value="{employDetail>/lastName}"\n                        enabled="{Edit>/isEdit}" /></VBox></HBox><HBox id="emailID" alignItems="Center"><VBox id="emailLabelID" width="10%"><Label id="emailLabel" text="{i18n>emailText}" /></VBox><VBox id="emailTextID" width="50%"><Input id="emailInput" type="Text"\n                        placeholder="{i18n>placeholderEmail}"\n                        value="{employDetail>/email}"\n                        enabled="{Edit>/isEdit}" /></VBox></HBox><HBox id="hideDateID" alignItems="Center"><VBox id="hireDateLabelID" width="10%"><Label id="hireDateLabel" text="{i18n>hireDate}" /></VBox><VBox id="hireDateTextID" width="50%"><Input id="hireDateInput" type="Text"\n                        placeholder="{i18n>placeholderHireDate}"\n                        value="{employDetail>/hireDate}"\n                        enabled="{Edit>/isEdit}" /></VBox></HBox><HBox id="roleID" alignItems="Center"><VBox id="roleLabelID" width="10%"><Label id="roleLabel" text="{i18n>role}" /></VBox><VBox id="roleTextID" width="50%"><ComboBox id="cbbRole" items="{roleList>/}" width="100%"\n                    placeholder="{i18n>placeholderRole}" selectedKey="{employDetail>/role/name}"><core:Item id="itemRole" key="{roleList>name}" text="{roleList>name}" /></ComboBox></VBox></HBox><HBox id="departmentID" alignItems="Center"><VBox id="departmentLabelID" width="10%"><Label id="departmentLabel" text="{i18n>department}" /></VBox><VBox id="departmentTextID" width="50%"><ComboBox id="cbbDepart" items="{departmentsList>/}" width="100%"\n                placeholder="{i18n>placeholderDepartment}" selectedKey="{employDetail>/department/name}"><core:Item id="itemDepart" key="{departmentsList>name}" text="{departmentsList>name}" /></ComboBox></VBox></HBox><HBox id="salaryID" alignItems="Center"><VBox id="salaryLabelID" width="10%"><Label id="salaryLabel" text="{i18n>salary}" /></VBox><VBox id="salaryTextID" width="50%"><Text id="salaryInput" text = "{employeeDetail>/salary}"/></VBox></HBox><Toolbar id="ToolbarList" ><content><ToolbarSpacer id="ToolbarSpacerList" /><Button id="btnSaveUpdate" type="Default" text="Update Information" press="onPressUpdate" /><Button id="btnUpdateSalary" type="Default" text="Update salary" press="onPressSalary" /></content></Toolbar></VBox></VBox></VBox></core:FragmentDefinition>',
	"project1/view/fragment/list.fragment.xml":'<core:FragmentDefinition xmlns:table="sap.ui.table"\n    xmlns:f="sap.f" displayBlock="true"\n    xmlns="sap.m"\n    xmlns:tnt="sap.tnt"\n    xmlns:fb="sap.ui.comp.filterbar"\n    xmlns:core="sap.ui.core"\n    xmlns:mvc="sap.ui.core.mvc" height="100%"><VBox id = "listContainer" class = "listContainer" visible="{VisibleControl>/list}"><Title id = "listTitle" class = "listTitle" text = "{i18n>empListTitle}"></Title><VBox id = "vtable" class = "table"><Table id = "itemTable" rememberSelections="false" selectionChange=".onItemSelection" mode = "SingleSelect" items ="{path: \'EntityList>/Employees\'}" \n            itemPress=".onPressItem" fixedLayout="false" growingThreshold="100" updateFinished="onUpdateStatusTb" growing="true"><columns><Column id="colName" width="30%" hAlign="Left"><Label id="lName" text="{i18n>nameText}" textAlign="Center" width="100%" /></Column><Column id="colRole" hAlign="Center" width="20%"><Label id="lRole" text="{i18n>roleText}" textAlign="Center" width="100%" /></Column><Column id="colDepartment" width="20%" hAlign="Left"><Label id="lDepartment" text="{i18n>deparText}" width="100%" /></Column><Column id="colEmail" width="30%" hAlign="Left"><Label id="lEmail" text="{i18n>emailText}" textAlign="Left" width="100%" /></Column><Column id="colDelete" width="5%" hAlign="Center"><Label id="lDelete" text="{i18n>deleteText}" textAlign="Left" width="100%" /></Column></columns><items><ColumnListItem id="clListItem" vAlign="Middle" type="Active"><cells><Text id="txtName" class="textTable" text="{EntityList>firstName} {EntityList>lastName}" textAlign="Center" /><Text id="txtRole" class="textTable" text="{EntityList>role/name}" textAlign="Center" /><Text id="txtDepart" class="textTable" text="{EntityList>department/name}" wrapping="false" /><Text id="txtEmail" class="textTable" text="{EntityList>email}" textAlign="Center" /><Button id="deleteButton" icon="sap-icon://delete" type="Transparent" press=".onDeleteEmployee" tooltip="{i18n>deleteTooltip}"\n                            enabled = "{ path: \'role>/role\', formatter: \'.formatter.isAdmin\' }" /></cells></ColumnListItem></items></Table></VBox></VBox></core:FragmentDefinition>',
	"project1/view/homeView.view.xml":'<mvc:View controllerName="project1.controller.homeView"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns:core="sap.ui.core"\n    xmlns:tnt="sap.tnt"\n    xmlns="sap.m"><Page id="page" showHeader="false" title="{i18n>title}" class = "page"><tnt:ToolHeader id="toolheader" class="toolHeader"><HBox id = "right" class = "right" ><Button id="back" type="Accept" text="Back" press="onPressBack"/><Image id = "Image" src = "./assets/logo.png" press="onPressHome" /><Title id = "Title" text="{i18n>companyName}" class = "title" level= "H3"/></HBox><HBox id="left" class= "left"><Button id="newEmp" type="Accept" text="Create Employee" press="onPressCreEmp"   visible="{ path: \'role>/role\', formatter: \'.formatter.isAdmin\' }" /><Button id="leaveRequest" type="Accept" text="Leave Request" press="onPressLeave"   visible="{ path: \'role>/role\', formatter: \'.formatter.isAdmin\' }" /></HBox></tnt:ToolHeader><content><core:Fragment fragmentName="project1.view.fragment.list" type="XML"/><core:Fragment fragmentName="project1.view.fragment.detail" type="XML"/><core:Fragment fragmentName="project1.view.fragment.create" type="XML"/></content></Page></mvc:View>'
});
//# sourceMappingURL=Component-preload.js.map
